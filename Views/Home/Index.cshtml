@{
    ViewData["Title"] = "Home";
}
<div class="container-fluid p-0 m-0">
    <div class="home-container">
        <!-- Left Side: Image (will be second on mobile) -->
        <div class="home-image-wrapper">
            <img src="~/images/A picture of myself.jpg" alt="Nathan Mazonde" class="home-image" />
        </div>
        <!-- Right Side: Typing Text (will be first on mobile) -->
        <div class="home-text">
            <div class="typing-container">
                <h1 class="typing-text"></h1>
            </div>
        </div>
    </div>
</div>
<!-- Updated Projects Section HTML -->
<section class="projects-container">
    <h2 class="projects-heading">PROJECTS I HAVE WORKED ON:</h2>
    <div class="project-item">
        <div class="project-image-wrapper">
            <a href="https://shopwingsandtacos.com" target="_blank">
                <img src="images/Wings & Tacos.JPG" alt="Wings & Tacos Restaurant Website" class="project-image">
            </a>
        </div>
        <div class="project-text">
            <h3 class="project-title">Website For Wings & Tacos Fast Food Restaurant</h3>
            <p class="project-description">
                I created a website for a local fast restaurant called Wings & Tacos
                using PHP, HTML, CSS, Javascript and MySQL for the database. The website
                allows customers to place orders and has an admin page that allows the
                owner to keep track of orders as well as close and open the shop. The
                website also handles online payments by directing users to PayFast which
                makes payment process swift and easy.
            </p>
            <a href="https://shopwingsandtacos.com" class="project-link" target="_blank">Visit shopwingsandtacos.com</a>
        </div>
    </div>
</section>

<section class="skills-container">
    <h2 class="skills-heading">MY PROGRAMMING SKILLS</h2>
    <div class="skills-grid">
        <div class="skill-card">
            <div class="skill-icon csharp-icon">
                <img src="images/c#-logo.svg" alt="C# Logo" />
            </div>
            <h3 class="skill-name">C#</h3>
            <p class="skill-description">Object-oriented programming language for building robust Windows applications and web services</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon sql-icon">
                <img src="images/sql-logo.svg" alt="SQL Logo" />
            </div>
            <h3 class="skill-name">SQL</h3>
            <p class="skill-description">Database query language for managing and manipulating relational databases efficiently</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon aspnet-icon">
                <img src="images/aspnet-logo.svg" alt="ASP.NET Logo" />
            </div>
            <h3 class="skill-name">ASP.NET MVC</h3>
            <p class="skill-description">Web framework for building scalable and maintainable web applications with clean architecture</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon python-icon">
                <img src="images/python-logo.svg" alt="Python Logo" />
            </div>
            <h3 class="skill-name">Python</h3>
            <p class="skill-description">Versatile programming language perfect for web development, data analysis, and automation</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon java-icon">
                <img src="images/java-logo.svg" alt="Java Logo" />
            </div>
            <h3 class="skill-name">Java</h3>
            <p class="skill-description">Cross-platform programming language for enterprise applications and Android development</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon html-icon">
                <img src="images/html-logo.svg" alt="HTML Logo" />
            </div>
            <h3 class="skill-name">HTML</h3>
            <p class="skill-description">Markup language that structures web content and provides the foundation for all websites</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon css-icon">
                <img src="images/css-logo.svg" alt="CSS Logo" />
            </div>
            <h3 class="skill-name">CSS</h3>
            <p class="skill-description">Styling language that brings websites to life with beautiful designs and responsive layouts</p>
        </div>

        <div class="skill-card">
            <div class="skill-icon js-icon">
                <img src="images/javascript-logo.svg" alt="JavaScript Logo" />
            </div>
            <h3 class="skill-name">JavaScript</h3>
            <p class="skill-description">Dynamic programming language that adds interactivity and functionality to web applications</p>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const textLines = [
            "HELLO & WELCOME ",
            "MY NAME IS NATHAN MAZONDE.",
            "I AM A GRADUATE WITH A ",
            "BACHELOR'S DEGREE IN ",
            "INFORMATION TECHNOLOGY."
        ];

        const typingText = document.querySelector('.typing-text');
        textLines.forEach(line => {
            const lineElement = document.createElement('span');
            lineElement.className = 'line';
            lineElement.textContent = '';
            typingText.appendChild(lineElement);
        });

        const lineElements = document.querySelectorAll('.line');
        let currentLineIndex = 0;
        let currentCharIndex = 0;

        function typeNextChar() {
            if (currentLineIndex < textLines.length) {
                const line = textLines[currentLineIndex];
                const lineElement = lineElements[currentLineIndex];

                if (currentCharIndex < line.length) {
                    lineElement.textContent += line[currentCharIndex];
                    currentCharIndex++;

                    // Check if we need to wrap text
                    const container = document.querySelector('.typing-container');
                    const containerWidth = container.offsetWidth;
                    if (lineElement.offsetWidth > containerWidth * 0.95) {
                        lineElement.style.whiteSpace = 'normal';
                    }

                    setTimeout(typeNextChar, 25); // Slightly slower for better readability
                } else {
                    currentLineIndex++;
                    currentCharIndex = 0;
                    setTimeout(typeNextChar, 300);
                }
            }
        }

        // Start typing after a short delay
        setTimeout(typeNextChar, 500);
    });
</script>